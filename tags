!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
<C-a>	vim/plugin/mappings/command.vim	/^cnoremap <C-a> <Home>$/;"	m
<C-e>	vim/plugin/mappings/command.vim	/^cnoremap <C-e> <End>$/;"	m
<C-h>	vim/plugin/mappings/normal.vim	/^nnoremap <C-h> <C-w>h$/;"	m
<C-j>	vim/plugin/mappings/normal.vim	/^nnoremap <C-j> <C-w>j$/;"	m
<C-k>	vim/plugin/mappings/normal.vim	/^nnoremap <C-k> <C-w>k$/;"	m
<C-l>	vim/plugin/mappings/normal.vim	/^nnoremap <C-l> <C-w>l$/;"	m
<Down>	vim/plugin/mappings/normal.vim	/^nnoremap <silent> <Down> :cnext<CR>$/;"	m
<Leader><Leader>	vim/plugin/mappings/leader.vim	/^nnoremap <Leader><Leader> <C-^>$/;"	m
<Leader>b	vim/after/plugin/fzf.vim	/^nmap <unique> <Leader>b  :Buffers<CR>$/;"	m
<Leader>d	vim/plugin/mappings/leader.vim	/^nnoremap <Leader>d g*<CR>$/;"	m
<Leader>g	vim/after/plugin/fzf.vim	/^nmap <unique> <Leader>g  :GFiles?<CR>$/;"	m
<Leader>h	vim/after/plugin/fzf.vim	/^nmap <unique> <Leader>h  :History<CR>$/;"	m
<Leader>o	vim/plugin/mappings/leader.vim	/^nnoremap <Leader>o :tabnew %<CR>$/;"	m
<Leader>q	vim/plugin/mappings/leader.vim	/^nnoremap <Leader>q :quit<CR>$/;"	m
<Leader>r	vim/plugin/mappings/leader.vim	/^nnoremap <silent> <Leader>r :call mappings#leader#cycle_numbering()<CR>$/;"	m
<Leader>t	vim/after/plugin/fzf.vim	/^nmap <unique> <Leader>t :Files<CR>$/;"	m
<Leader>w	vim/plugin/mappings/leader.vim	/^nnoremap <Leader>w :write<CR>$/;"	m
<Leader>x	vim/plugin/mappings/leader.vim	/^nnoremap <Leader>x :xit<CR>$/;"	m
<Leader>zz	vim/plugin/mappings/leader.vim	/^nnoremap <silent> <Leader>zz :call mappings#leader#zap()<CR>$/;"	m
<Left>	vim/plugin/mappings/normal.vim	/^nnoremap <silent> <Left> :cpfile<CR>$/;"	m
<LocalLeader>e	vim/plugin/mappings/leader.vim	/^nnoremap <LocalLeader>e :edit <C-R>=expand('%:p:h') . '\/'<CR>$/;"	m
<LocalLeader>l	vim/after/plugin/fzf.vim	/^nmap <unique> <LocalLeader>l :Lines<CR>$/;"	m
<LocalLeader>v	vim/plugin/mappings/leader.vim	/^nnoremap <LocalLeader>v :cd ~\/.config\/nvim\/<CR>:edit ~\/.config\/nvim\/<CR>$/;"	m
<Right>	vim/plugin/mappings/normal.vim	/^nnoremap <silent> <Right> :cnfile<CR>$/;"	m
<S-Tab>	vim/plugin/mappings/command.vim	/^cnoremap <expr> <S-Tab> getcmdtype() == '\/' \\|\\| getcmdtype() == '?' ? '<CR>?<C-r>\/' : '<S-Tab>'$/;"	m
<Tab>	vim/plugin/mappings/command.vim	/^cnoremap <expr> <Tab> getcmdtype() == '\/' \\|\\| getcmdtype() == '?' ? '<CR>\/<C-r>\/' : '<C-z>'$/;"	m
<Tab><Tab>	vim/plugin/mappings/leader.vim	/^nnoremap <silent> <Tab><Tab> :FloatermToggle<CR>$/;"	m
<Up>	vim/plugin/mappings/normal.vim	/^nnoremap <silent> <Up> :cprevious<CR>$/;"	m
Idleboot	vim/plugin/autocmds.vim	/^  augroup Idleboot$/;"	a
K	vim/plugin/mappings/normal.vim	/^nnoremap K <nop>$/;"	m
Q	vim/plugin/mappings/normal.vim	/^nnoremap Q <nop>$/;"	m
RegedarekAutocmds	vim/plugin/autocmds.vim	/^  augroup RegedarekAutocmds$/;"	a
Run	vim/plugin/commands.vim	/^command! -nargs=* Run packadd vimux  | source $MYVIMRC | call VimuxRunCommand(<args>)$/;"	c
Y	vim/plugin/mappings/normal.vim	/^noremap Y y\$$/;"	m
autocmds#blur_statusline	vim/autoload/autocmds.vim	/^function! autocmds#blur_statusline() abort$/;"	f
autocmds#blur_window	vim/autoload/autocmds.vim	/^function! autocmds#blur_window() abort$/;"	f
autocmds#focus_statusline	vim/autoload/autocmds.vim	/^function! autocmds#focus_statusline() abort$/;"	f
autocmds#focus_window	vim/autoload/autocmds.vim	/^function! autocmds#focus_window() abort$/;"	f
autocmds#idleboot	vim/autoload/autocmds.vim	/^function! autocmds#idleboot() abort$/;"	f
autocmds#should_colorcolumn	vim/autoload/autocmds.vim	/^function! autocmds#should_colorcolumn() abort$/;"	f
autocomplete#deoplete_init	vim/autoload/autocomplete.vim	/^function! autocomplete#deoplete_init() abort$/;"	f
b:did_ftplugin	vim/ftplugin/qf.vim	/^let b:did_ftplugin=1$/;"	v
b:indentLine_ConcealOptionSet	vim/ftplugin/vim.vim	/^  let b:indentLine_ConcealOptionSet = 1$/;"	v
defer#defer	vim/autoload/defer.vim	/^function! defer#defer(evalable) abort$/;"	f
functions#substitute	vim/autoload/functions.vim	/^function! functions#substitute(pattern, replacement, flags) abort$/;"	f
g:ColorColumnBlacklist	vim/autoload/autocmds.vim	/^let g:ColorColumnBlacklist = ['diff', 'undotree', 'qf', 'tagbar']$/;"	v
g:FerretAutojump	vim/after/plugin/ferret.vim	/^let g:FerretAutojump=2$/;"	v
g:indentLine_bufNameExclude	vim/after/plugin/indentLine.vim	/^let g:indentLine_bufNameExclude = ['.tern-project']$/;"	v
g:indentLine_color_gui	vim/after/plugin/indentLine.vim	/^let g:indentLine_color_gui = '#4d4f4e'$/;"	v
g:indentLine_fileTypeExclude	vim/after/plugin/indentLine.vim	/^let g:indentLine_fileTypeExclude = ['help']$/;"	v
g:rspec_command	vim/after/plugin/vim-rspec.vim	/^let g:rspec_command = 'Run("bundle exec rspec {spec}\\n")'$/;"	v
log	private_dot_local/bin/executable_chezmoi-sync.sh	/^log() {$/;"	f
mappings#leader#cycle_numbering	vim/autoload/mappings/leader.vim	/^function! mappings#leader#cycle_numbering() abort$/;"	f
mappings#leader#zap	vim/autoload/mappings/leader.vim	/^function! mappings#leader#zap() abort$/;"	f
q:	vim/plugin/mappings/normal.vim	/^nnoremap q: <nop>$/;"	m
s:deoplete_init_done	vim/autoload/autocomplete.vim	/^let s:deoplete_init_done=0$/;"	v
update_statusline	vim/autoload/autocmds.vim	/^function! s:update_statusline(default, action) abort$/;"	f
